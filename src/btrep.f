      SUBROUTINE BTREP(VALU,IPTR,IPTRO,TYPE)

         USE Files, only : LENBF3
         USE Utils, only : ITOH

         INCLUDE 'syspar.inc'
C
C  PURPOSE:   REPLACE VALUES IN A BTREE
C
C  PARAMETERS
C    INPUT:  VALU----KEY VALUE TO PROCESS
C         IPTR----NEW POINTER TO BE USED
C         IPTRO---OLD POINTER TO BE REPLACED
C         TYPE----TYPE OF VARIABLE BEING ADDED
C
C
C  SUBROUTINES USED
C         BTGET---PAGING ROUTINE
C         BTPUT---PAGING ROUTINE
C
C  DECLARATIVES
C
         INCLUDE 'rmatts.inc'
         INCLUDE 'btbuf.inc'
         INCLUDE 'start.inc'
         INCLUDE 'stack.inc'
C
         INTEGER VAL,VALU(1)
C
C     VAL IS REAL UNTIL BTREE IS ALLOWED 2 WORDS
C
         REAL RVAL
         EQUIVALENCE (RVAL,VAL)
         INTEGER TYPE
C
C  INITIAL START OF THE SCAN.
C
         SP = 0
         KSTART = START
         VAL = VALU(1)
         ITYPE = TYPE
         IF(TYPE.EQ.KZDATE) ITYPE = KZINT
         IF(TYPE.EQ.KZTIME) ITYPE = KZINT
         IF(TYPE.EQ.KZTEXT) ITYPE = KZINT
         IP = IPTR
  100    CONTINUE
         SP = SP + 1
         STACK(SP) = KSTART
C
C  FETCH A NODE.
C
         CALL BTGET(KSTART,IN)
         KEND = IN + (LENBF3/3) - 1
C
C  LOOP THROUGH A NODE.
C
         DO 300 J=IN,KEND
C
C  CHECK FOR END-OF-LIST WORD.
C
            IF(VALUE(1,J).EQ.ENDWRD) GO TO 200
C
C  IF THE VALUE IS LT VAL THEN KEEP LOOKING.
C
            IF((ITYPE.EQ.KZINT).AND.(VALUE(1,J).LT.VAL)) GO TO 300
            IF((ITYPE.NE.KZINT).AND.(RVALUE(1,J).LT.RVAL)) GO TO 300
C
C  FOUND A BIGGER VALUE.
C
  200       CONTINUE
C
C  GO TO THE NEXT BRANCH IF THERE IS ONE.
C
            IF(VALUE(2,J).GE.0) GO TO 400
            KSTART = -VALUE(2,J)
            GO TO 100
  300    CONTINUE
C
C  WE DID NOT FIND THE END-OF-LIST WORD. DISASTER.
C
         GO TO 1000
C
C  END OF THE BTREE SEARCH.
C
  400    CONTINUE
C
C  CHECK FOR A DUPLICATE VALUE.
C
         IF(VALUE(1,J).NE.VAL) GO TO 1000
         IF(VALUE(3,J).NE.0) GO TO 450
         IF(VALUE(2,J).NE.IPTRO) GO TO 450
         VALUE(2,J) = IPTR
         CALL BTPUT(KSTART)
         GO TO 1000
  450    CONTINUE
C
C  WE HAVE A MULTIPLE VALUE. FOLLOW THE LINKS.
C
C  GET THE MOT NODE.
C
         MOTIND = 3 * J
         MOTIDP = STACK(SP)
         IF(VALUE(3,J).EQ.0) GO TO 1000
         CALL ITOH(MOTIND,MOTID,VALUE(3,J))
C
C  MOT LINK TRAIL.
C
  460    CONTINUE
         CALL BTGET(MOTID,IN)
         IN = 3 * IN - 3
         MOTIDP = MOTID
  470    CONTINUE
         MOTIND = MOTIND + IN
         IF(CORE(MOTIND+1).EQ.IPTRO) GO TO 500
         IF(CORE(MOTIND).EQ.0) GO TO 1000
         CALL ITOH(MOTIND,MOTID,CORE(MOTIND))
C
C  SEE IF WE ARE ON THE SAME MOT PAGE.
C
         IF(MOTID.EQ.MOTIDP) GO TO 470
         GO TO 460
C
C  REPLACE THE POINTER.
C
  500    CONTINUE
         CORE(MOTIND+1) = IPTR
         CALL BTPUT(MOTIDP)
         RETURN
C
C  LOOKUP FOR A VALUE NOT IN THE TREE.
C
 1000    CONTINUE
         RETURN
      END

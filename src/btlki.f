      SUBROUTINE BTLKI(VAL,IPTR,MOTID)
      INCLUDE 'syspar.inc'
C
C  PURPOSE:  LOOKUP PROCESSING ROUTINE FOR BTREES
C
C  PARAMETERS
C    INPUT:  VAL-----KEY VALUE TO PROCESS
C            IPTR----POINTER TO TUPLE HAVING THIS KEY VALUE
C            MOTID---MOT LINK
C
C  SUBROUTINES USED
C         BTGET---PAGING ROUTINE
C
      INCLUDE 'f3com.inc'
      INCLUDE 'ascpar.inc'
      INCLUDE 'btbuf.inc'
      INCLUDE 'start.inc'
C
      INTEGER VAL
C
C  SET UP VARIABLES BASED ON THE ENTRY POINT.
C
C
C  INITIAL START OF THE SCAN.
C
      KSTART = START
  100 CONTINUE
C
C  FETCH A NODE.
C
      CALL BTGET(KSTART,IN)
      KEND = IN + (LENBF3/3) - 1
C
C  LOOP THROUGH A NODE.
C
      DO 300 J=IN,KEND
C
C  CHECK FOR END-OF-LIST WORD.
C
      IF(VALUE(1,J).EQ.ENDWRD) GO TO 200
C
C  IF THE VALUE IS LT VAL THEN KEEP LOOKING.
C
      IF(VALUE(1,J).LT.VAL) GO TO 300
C
C  FOUND A BIGGER VALUE.
C
  200 CONTINUE
C
C  GO TO THE NEXT BRANCH IF THERE IS ONE.
C
      IF(VALUE(2,J).GE.0) GO TO 400
      KSTART = -VALUE(2,J)
      GO TO 100
  300 CONTINUE
C
C  WE DID NOT FIND THE END-OF-LIST WORD. DISASTER.
C
      GO TO 500
C
C  DONE SCANNING THE BTREE.
C
  400 CONTINUE
C
C  CHECK FOR AN EQUAL VALUE.
C
      IF(VALUE(1,J).NE.VAL) GO TO 500
C
C  PROCESS WAS A LOOKUP. RETURN THE TUPLE POINTER.
C
      IPTR = VALUE(2,J)
      MOTID = VALUE(3,J)
      IF(MOTID.NE.0) CALL MOTSCN(MOTID,IPTR)
      RETURN
C
C  THIS VALUE IS NOT IN THE BTREE YET.
C
  500 CONTINUE
      IPTR = 0
      MOTID = 0
      RETURN
      END
